{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "description": "RESTful API for corporate peer review and performance tracking application.",
    "title": "Performhance API"
  },
  "host": "localhost:8080",
  "paths": {
    "/organizations": {
      "get": {
        "operationId": "getOrganizations",
        "description": "Gets all `Organization` objects",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganization",
        "description": "Adds a new `Organization` object to the repository",
        "parameters": [
          {
            "name": "organization",
            "in": "body",
            "description": "Organization object which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "operationId": "getOrganization",
        "description": "Gets the `Organization` object with given id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` that is going to be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "An organization with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/users": {
      "get": {
        "operationId": "getOrganizationUsers",
        "description": "Returns all the employees of an organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains a List of `User` objects",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/teams/": {
      "get": {
        "operationId": "getOrganizationTeams",
        "description": "Gets the `Team` objects in the given `Organization`",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` to filter the `Team` objects by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/criteria/": {
      "get": {
        "operationId": "getOrganizationCriterias",
        "description": "Get all `Criteria` objects of an Organization with given id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` that `Criteria`s belongs to"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToGroup",
        "description": "Assigns `Criteria` with given id to the users with given id list",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Organization` that `Criteria` belongs to"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`s"
          },
          {
            "name": "userIdList",
            "in": "body",
            "required": true,
            "description": "Id list of `User`s that `Criteria` will be assigned",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "description": "Adds a new `User`",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "required": true,
            "description": "The `User` object to be added"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns successfully added `User` object",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Empty username is not allowed / You  are not authorized for this organization /",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "description": "Returns the `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains a `User` object"
          },
          "404": {
            "description": "A `User` with given id does not exist OR you are not authorized for this `Organization`",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "description": "Deletes an employee of the given id from an organization",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains the deleted `User` object"
          },
          "404": {
            "description": "A user with given id does not exists / You  are not authorized for this organization",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/criteria/": {
      "get": {
        "operationId": "getUserCriteriaList",
        "description": "Gets all `Criteria`s of `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/users/{userId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToUser",
        "description": "Assigns `Criteria` to a `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "removeCriteriaFromUser",
        "description": "Removes `Criteria` from a `User` with given id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `User`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be removed from `User`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "operationId": "getTeams",
        "description": "Gets all `Team` objects",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postTeam",
        "description": "Adds a new `Team` object to the repository",
        "parameters": [
          {
            "name": "team",
            "in": "body",
            "description": "Team object which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}": {
      "get": {
        "operationId": "getOrganizationTeam",
        "description": "Gets the `Team` object with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team` that will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A `Team` with given id does not exist",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/teams/{teamId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToTeamUsers",
        "description": "Assigns `Criteria` to the `User`s of a `Team` with given id",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Team`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`s"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/jobTitles": {
      "get": {
        "operationId": "getJobTitles",
        "description": "Gets all `JobTitle` objects\n",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "addJobTitles",
        "description": "Adds given `JobTitles` object",
        "parameters": [
          {
            "name": "jobTitle",
            "in": "body",
            "description": "The `JobTitle` object which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobTitle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/jobTitles/{jobTitleId}": {
      "get": {
        "operationId": "getJobtitle",
        "description": "Returns the `JobTitle` object of the given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a response that contains a `JobTitle` object",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "A job title with given id does not exist"
          }
        }
      }
    },
    "/jobTitles/{jobTitleId}/criteria/{criteriaId}": {
      "post": {
        "operationId": "assignCriteriaToJobTitleUsers",
        "description": "Assigns `Criteria` to the `User`s of a `JobTitle` with given id",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `JobTitle`"
          },
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be assigned to `User`s"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/criteria": {
      "get": {
        "operationId": "getCriterias",
        "description": "Gets all `Criteria` objects for admin user",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "postCriteria",
        "description": "Adds given `Criteria` object",
        "parameters": [
          {
            "name": "criteria",
            "description": "The `Criteria` object which will be added to repository",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Criteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/criteria/{criteriaId}": {
      "get": {
        "operationId": "getCriteria",
        "description": "Get `Criteria` object of an Organization with given Id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "put": {
        "operationId": "updateCriteria",
        "description": "Updates `Criteria` with given id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be updated"
          },
          {
            "name": "criteriaRequest",
            "in": "body",
            "required": true,
            "description": "Id list of `User`s that `Criteria` will be assigned",
            "schema": {
              "$ref": "#/definitions/Criteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCriteria",
        "description": "Deletes `Criteria` with given id",
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Criteria` that will be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "operationId": "getReviews",
        "description": "Gets all `Review` objects that authorized user can access",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "operationId": "addReview",
        "description": "Adds given `Review` object",
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "description": "Review object which will be added to repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/reviews/{reviewId}": {
      "get": {
        "operationId": "getReview",
        "description": "Gets `Review` object with given id",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Review` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteReview",
        "description": "Deletes `Review` object with given id",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Id of the `Review` object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier representing the type of error"
        },
        "message": {
          "type": "string",
          "description": "Brief explanation about reasons why the error may have occured"
        }
      }
    },
    "JobTitle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a JobTitle"
        },
        "title": {
          "type": "string",
          "description": "Name of the job title"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a organization"
        },
        "name": {
          "type": "string",
          "description": "Name of the organization"
        },
        "numberOfEmployees": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the number of employees who work for the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "description": "Represents the employees of the organization"
        },
        "jobTitles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobTitle"
          },
          "description": "Represents the defined job titles in an organization"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "manager": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "A flag that represents the success of the request"
        },
        "data": {
          "type": "object",
          "description": "The data of type T that request asked for"
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a team"
        },
        "name": {
          "type": "string",
          "description": "Name of the team"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response"
          },
          "description": "List of the `User`s in team"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "leader": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a User"
        },
        "name": {
          "type": "string",
          "description": "Name of the user"
        },
        "surname": {
          "type": "string",
          "description": "Surname of the user"
        },
        "jobTitle": {
          "$ref": "#/definitions/JobTitle"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "MANAGER",
            "TEAM_LEADER",
            "EMPLOYEE"
          ],
          "description": "Role of the user"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "username": {
          "type": "string",
          "description": "Username of user that is used for authentication"
        },
        "password": {
          "type": "string",
          "description": "Password of user that is used for authentication"
        }
      }
    },
    "Criteria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a criteria"
        },
        "criteria": {
          "type": "string",
          "description": "Name of the criteria"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier of a review"
        },
        "reviewedEmployee": {
          "$ref": "#/definitions/User"
        },
        "reviewer": {
          "$ref": "#/definitions/User"
        },
        "comment": {
          "type": "string",
          "description": "An optional comment of reviewer"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "evalauation": {
          "$ref": "#/definitions/evaluation"
        }
      }
    },
    "evaluation": {
      "required": [
        "default"
      ],
      "properties": {
        "default": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}